"use strict";(self.webpackChunkmlops_made_easy=self.webpackChunkmlops_made_easy||[]).push([[5058],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7480:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:3},i="First Application",s={unversionedId:"continuous-delivery/first-application",id:"continuous-delivery/first-application",title:"First Application",description:"",source:"@site/docs/06-continuous-delivery/03-first-application.md",sourceDirName:"06-continuous-delivery",slug:"/continuous-delivery/first-application",permalink:"/continuous-delivery/first-application",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"App of Apps Pattern",permalink:"/continuous-delivery/app-of-apps"},next:{title:"ArgoCD Behind an Ingress",permalink:"/continuous-delivery/behind-ingress"}},l={},c=[],p={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"first-application"},"First Application"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall my-release\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'controller:\n  updateStrategy:\n    type: "RollingUpdate"\n    rollingUpdate:\n      maxUnavailable: 1\n  hostPort:\n    enabled: true\n  terminationGracePeriodSeconds: 0\n  service:\n    type: "NodePort"\n  watchIngressWithoutClass: true\n  nodeSelector:\n    ingress-ready: "true"\n  tolerations:\n    - key: "node-role.kubernetes.io/master"\n      operator: "Equal"\n      effect: "NoSchedule"\n    - key: "node-role.kubernetes.io/control-plane"\n      operator: "Equal"\n      effect: "NoSchedule"\n  publishService:\n    enabled: false\n  extraArgs:\n    publish-status-address: "localhost"\n    watch-ingress-without-class: true\n    enable-ssl-passthrough: true\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: ingress-nginx\n  namespace: argocd\n  finalizers:\n    - resources-finalizer.argocd.argoproj.io\nspec:\n  project: default\n  sources:\n    - repoURL: https://kubernetes.github.io/ingress-nginx\n      chart: ingress-nginx\n      targetRevision: "*"\n      helm:\n        releaseName: ingress-nginx\n        valueFiles:\n          - $values/06-continuous-delivery/system/nginx-ingress-controller-kind/values.yaml\n    - repoURL: git@github.com:justingodden/mlops-made-easy-project-code.git\n      ref: values\n  destination:\n    server: "https://kubernetes.default.svc"\n    namespace: ingress-nginx\n  syncPolicy:\n    syncOptions:\n      - CreateNamespace=true\n    automated:\n      selfHeal: true\n      prune: true\n')))}d.isMDXComponent=!0}}]);